# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(aliases git docker docker-compose encode64 helm isodate jsontools kubectl npm z)

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nano'
 else
  export EDITOR='micro -softwrap true'
fi


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# git
alias gprune="git fetch -p && git branch -vv | awk '/: gone]/{print \$1}' | xargs -I {} git branch -d \"{}\""
alias gprune!="git fetch -p && git branch -vv | awk '/: gone]/{print \$1}' | xargs -I {} git branch -D \"{}\""
alias squash="git rebase -i HEAD~5"
alias glr="git pull --rebase"
gbll () {
    # check git history of a single line of code
    local file=$(fzf)
  cat "$file" | awk '{printf("%5d %s\n", NR, $0)}' \
    | fzf --layout reverse --preview-window up --preview "echo {} | awk '{print \$1}' | xargs -I _ sh -c \"git log --color -L_,'+1:${file}'\""
}
alias gsearch="git log --source --all -S"

#gnu
alias t="tree -L 2 -a -I '.git' --gitignore --dirsfirst"
alias crepe="grep -Pzao"

# edit
alias e="$EDITOR"
alias m="micro"

export FZF_DEFAULT_COMMAND='rg --files'
FZF_FILE_PREVIEW_COMMAND='if file --mime {} | grep -q binary; then head -c 1MB {}; else bat -p --color always {} | head -n 1000; fi'
FZF_FOLDER_PREVIEW_COMMAND='dirname {} | xargs -I _ tree -C -L 2 --gitignore --dirsfirst _'

alias fzf-preview='fzf --layout reverse \
  --preview-window up \
  --preview-window=wrap \
  --bind "ctrl-f:change-preview:'"$FZF_FILE_PREVIEW_COMMAND"'" \
  --bind "ctrl-d:change-preview:'"$FZF_FOLDER_PREVIEW_COMMAND"'" \
  --header "ctrl-f: file preview, ctrl-d: folder preview" \
  --header-first'

alias fzf-file-preview='fzf-preview --preview "'"$FZF_FILE_PREVIEW_COMMAND"'"'
alias fzf-folder-preview='fzf-preview --preview "'"$FZF_FOLDER_PREVIEW_COMMAND"'"'

alias c='cd ~ && cd "$(fzf-folder-preview | xargs -d "\n" dirname)"'
alias o='fzf-file-preview | xargs micro'


gff() {
  local git_root=$(git rev-parse --show-toplevel)
  local directory
  if [[ -n $1 ]]; then
    directory="$1"
  else
    directory=$git_root
  fi

  local file=$(cd "$directory" && fzf-file-preview)
  local relative_path=$(realpath --relative-to="$git_root" "$file")

  local string=$(echo $file | fzf --layout=reverse \
      --preview="git log -p --color -S{q} -- $file | delta" \
      --preview-window "up:99%:wrap" \
      --prompt="Enter Search String: " \
      --print-query)
  
  local commit=$(git log --color --oneline -S"$string" -- "$file" | fzf \
      --ansi --layout=reverse \
      --preview="cd '$directory' && git show {1}:'$relative_path' | bat --color always --file-name '$file'" \
      --preview-window "up:80%:wrap" \
      --prompt="Select commit: " | awk '{print $1}')

  git show "$commit:$relative_path"
}

function frg {
  result=$(rg --ignore-case --color=always --line-number --no-heading "$@" |
    fzf --ansi \
        --color 'hl:-1:underline,hl+:-1:underline:reverse' \
        --delimiter ':' \
        --preview "bat --color=always {1} --theme='Solarized (light)' --highlight-line {2}" \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3')
  file=${result%%:*}
  linenumber=$(echo "${result}" | cut -d: -f2)
  if [[ -n "$file" ]]; then
          $EDITOR +"${linenumber}" "$file"
  fi
}

figlet-all() {
  for font in /usr/share/figlet/*.tlf; do
      font_name=$(basename "$font" .tlf)
      figlet -f $font_name "$1"
      echo "$font_name"
      echo
      echo
  done
}

figlet-fzf() {
  ls /usr/share/figlet/*.tlf | xargs -I {} basename "{}" .tlf | fzf \
    --phony --no-mouse --multi --layout reverse \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    --preview "echo {+} | xargs -d' ' -I _ figlet -f _ '{q}'" \
    --header "figlet"
}

ctlf () {
    sudo systemctl restart $1
    sudo journalctl -b -u $1
}

# sytemctl
alias ctl="sudo systemctl"
alias ctlx="sudo systemctl stop"
alias ctls="sudo systemctl start"
alias ctlr="sudo systemctl restart"
alias ctll="sudo journalctl -b -u"

# docker
alias dka="docker ps -q | xargs docker stop | xargs docker rm"
alias dka!="docker ps -aq | xargs docker stop | xargs docker rm"
alias dkav!="docker volume ls | xargs docker volume rm"
alias dk!="dka! && dkav!"
alias dr!="dk! && dcup > /dev/null"

# telnet
alias telnetssl="openssl s_client -connect"

export PATH="$HOME/bin:$PATH"

# brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# qalc
alias calc="qalc -t"

typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# kubernetes
source <(kubectl completion zsh) > /dev/null
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

eval $(thefuck --alias) > /dev/null

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform

export ANSIBLE_NOCOWS=1

eval "$(direnv hook zsh)"
[ -f "~/.ghcup/env" ] && source "~/.ghcup/env" # ghcup-env

CURRENT_COW=$(fortune | cowsay)
echo $CURRENT_COW